[{"/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/index.js":"1","/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/App.js":"2","/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/reportWebVitals.js":"3","/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/pages/Home.js":"4","/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/components/Header/index.js":"5","/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/components/Footer/index.js":"6","/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/utils/queries.js":"7","/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/components/ProfileList/index.js":"8","/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/components/ProfileForm/index.js":"9","/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/utils/mutations.js":"10"},{"size":500,"mtime":1663104403044,"results":"11","hashOfConfig":"12"},{"size":993,"mtime":1663104403043,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1663104403044,"results":"14","hashOfConfig":"12"},{"size":921,"mtime":1663104403044,"results":"15","hashOfConfig":"12"},{"size":540,"mtime":1663104403043,"results":"16","hashOfConfig":"12"},{"size":291,"mtime":1663104403043,"results":"17","hashOfConfig":"12"},{"size":158,"mtime":1663104403044,"results":"18","hashOfConfig":"12"},{"size":987,"mtime":1663104403043,"results":"19","hashOfConfig":"12"},{"size":3313,"mtime":1670264632403,"results":"20","hashOfConfig":"12"},{"size":188,"mtime":1663104403044,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"9jjxso",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/index.js",[],["44","45"],"/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/App.js",[],"/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/reportWebVitals.js",[],"/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/pages/Home.js",[],"/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/components/Header/index.js",[],"/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/components/Footer/index.js",[],"/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/utils/queries.js",[],"/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/components/ProfileList/index.js",[],"/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/components/ProfileForm/index.js",["46"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_PROFILE } from '../../utils/mutations';\nimport { QUERY_PROFILES } from '../../utils/queries';\n\nconst ProfileForm = () => {\n  const [name, setName] = useState('');\n\n  // When we execute the useMutation Hook, the data in our back-end database is updated and an object is returned. In some cases -- like when we create or delete data -- the cache may not update automatically:\n  // In those cases, we add an update function as the second argument of our useMutation Hook:\n\n  const [addProfile, { error }] = useMutation(ADD_PROFILE, {\n    // The update method allows us to access and update the local cache\n    // We add two arguments to the update function: the cache object that represents the Apollo Client cache and a data property. \n    //The data property is set to hold the data returned from the mutation function:\n    update(cache, { data: { addProfile } }) {\n      try {\n        // First we retrieve existing profile data that is stored in the cache under the `QUERY_PROFILES` query\n        // Could potentially not exist yet, so wrap in a try/catch\n\n        // ðŸ”‘  We then use the web API function .readQuery() to retrieve the existing list of profiles in the cache:\n        const { profiles } = cache.readQuery({ query: QUERY_PROFILES });\n\n        // Then we update the cache by combining existing profile data with the newly created data returned from the mutation\n        \n        //  ðŸ”‘ We use .writeQuery() to update the data on the cache and keep the cache in sync with our back end:\n        cache.writeQuery({\n          query: QUERY_PROFILES,\n          // If we want new data to show up before or after existing data, adjust the order of this array\n          // Next, we combine the data from the newly executed mutation function with the data we retrieved from the cache and store the results in our data property:\n          // All subscribers to the Apollo Client cache (including all active queries) see this change and update your application's UI accordingly.\n          data: { profiles: [...profiles, addProfile] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = addProfile({\n        variables: { name },\n      });\n\n      setName('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Add yourself to the list...</h3>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-center\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"col-12 col-lg-9\">\n          <input\n            placeholder=\"Add your profile name...\"\n            value={name}\n            className=\"form-input w-100\"\n            onChange={(event) => setName(event.target.value)}\n          />\n        </div>\n\n        <div className=\"col-12 col-lg-3\">\n          <button className=\"btn btn-info btn-block py-3\" type=\"submit\">\n            Add Profile\n          </button>\n        </div>\n        {error && (\n          <div className=\"col-12 my-3 bg-danger text-white p-3\">\n            Something went wrong...\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default ProfileForm;\n","/Users/jeromechenette/Desktop/today/01/17-Ins_Apollo-Cache/client/src/utils/mutations.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":45,"column":15,"nodeType":"53","messageId":"54","endLine":45,"endColumn":19},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]